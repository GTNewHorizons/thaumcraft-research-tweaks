buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        // defaults to Java 8 & UTF-8 encoding
        classpath 'com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'forge'

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

version = "1.0"
group = "elan.thaumcraft.research.tweaks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ThaumcraftResearchTweaks"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

repositories {
    maven {
        name = "mcmoddev"
        url = "https://maven.mcmoddev.com/"
    }
    maven {
        name = "minecraftforge"
        url = "https://files.minecraftforge.net/maven/"
    }
    maven {
        name = "jeknins-thirdparty"
        url = "http://jenkins.usrv.eu:8081/nexus/content/repositories/thirdparty/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public'
    }
}

dependencies {
    compile 'com.azanor:Thaumcraft:1.7.10-4.2.3.5:deobf'
    compile 'com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf'
    compile 'com.github.GTNewHorizons:SpongeMixins:1.3.3:dev'


    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives devJar
    archives sourcesJar
}

def mixinConfigJson = 'mixins.ThaumcraftResearchTweaks.json'
def mixingConfigRefMap = 'mixins.ThaumcraftResearchTweaks.refmap.json'

def mixinAnnotationProcessorJar = new File(projectDir.absolutePath + '/build/mixin-0.8-SNAPSHOT.jar')
def mixinAnnotationProcessorUrl = new URL("https://github.com/TimeConqueror/SpongeMixins/raw/master/mixin-0.8-SNAPSHOT.jar")

def ensureMixinJarPresent = task ensureMixinJarPresent {
    if (!mixinAnnotationProcessorJar.exists()) {
        mixinAnnotationProcessorJar.parentFile.mkdirs()
        mixinAnnotationProcessorUrl
                .withInputStream { inputStream ->
                    mixinAnnotationProcessorJar.withOutputStream { it << inputStream }
                }
    }
}
tasks.compileJava.dependsOn ensureMixinJarPresent

def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + mixingConfigRefMap

def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"

jar {
    from refMap
    manifest {
        attributes([
                "TweakClass"                 : "org.spongepowered.asm.launch.MixinTweaker",
                'MixinConfigs'               : mixinConfigJson,
                'FMLCorePluginContainsFMLMod': 'true',
                "ForceLoadAsMod"             : true
        ])
    }
}

reobf {
    addExtraSrgFile mixinSrg
}

afterEvaluate {
    tasks.compileJava {
        println "Path: " + projectDir.absolutePath
        options.compilerArgs += [
                // There's a bug in the AnnotationProcessor for 0.7.11 that will generate the annotations pointing to the parent class instead of subclass
                // resulting in the mixin not being applied.  This is fixed in 0.8, however 0.8 needs guava > 21.0, and minecraft ships with 17.0.
                // So as a hacky workaround... ship with 0.7.11, but use the AP from 0.8 for compiling
                "-processorpath", mixinAnnotationProcessorJar.absolutePath,
                "-processor", "org.spongepowered.tools.obfuscation.MixinObfuscationProcessorInjection,org.spongepowered.tools.obfuscation.MixinObfuscationProcessorTargets",
                "-Xlint:-sunapi", "-XDenableSunApiLintControl", "-XDignore.symbol.file",
                "-AreobfSrgFile=${tasks.reobf.srg}", "-AoutSrgFile=${mixinSrg}", "-AoutRefMapFile=${refMap}"
        ]
    }
}

sourceSets {
    main {
        output.resourcesDir = output.classesDir
        ext.refMap = mixingConfigRefMap
    }
}

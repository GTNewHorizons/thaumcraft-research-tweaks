buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath "com.github.GTNH2:ForgeGradle:FG_1.2-SNAPSHOT"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.kapt" version "$kotlinVersion"
}

apply plugin: "idea"
apply plugin: "forge"

version = "1.7.10-${project.version}"
group = "elan.thaumcraft.research.tweaks" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ThaumcraftResearchTweaks"

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"

    replaceIn "Main.kt"
    replace "@GRADLE_PROJECT_VERSION@", project.version
}

repositories {
    maven {
        name = "mcmoddev"
        url = "https://maven.mcmoddev.com/"
    }
    maven {
        name = "minecraftforge"
        url = "https://files.minecraftforge.net/maven/"
    }
    maven {
        name = "jeknins-thirdparty"
        url = "http://jenkins.usrv.eu:8081/nexus/content/repositories/thirdparty/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/repository/maven-public"
    }
    maven {
        name = "shadowfacts"
        url = "http://maven.shadowfacts.net/"
    }
    mavenLocal()
}

dependencies {
    compile "net.shadowfacts:Forgelin:1.9.0-GTNH-1.7.10-Edition"

    compile "com.azanor:Thaumcraft:1.7.10-4.2.3.5:deobf"
    compile "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
    compile "com.github.GTNewHorizons:SpongeMixins:1.3.3:dev"

    kapt("org.spongepowered:mixin:0.8-SNAPSHOT") // using 0.8 to workaround a bug in 0.7 which fails mixin application
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "gson"
        exclude module: "commons-io"
        exclude module: "log4j-core"
    }

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version,
                "mcversion": project.minecraft.version,
                "modid": archivesBaseName
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

task devJar(type: Jar) {
    from sourceSets.main.output
    archiveClassifier.set("dev")
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set("sources")
}

artifacts {
    archives devJar
    archives sourcesJar
}

def mixinConfigJson = "mixins.thaumcraftresearchtweaks.json"
def mixingConfigRefMap = "mixins.thaumcraftresearchtweaks.refmap.json"
def refMap = "${tasks.compileJava.temporaryDir}" + File.separator + mixingConfigRefMap
def mixinSrg = "${tasks.reobf.temporaryDir}" + File.separator + "mixins.srg"

jar {
    from refMap
    manifest {
        attributes([
                "TweakClass"                 : "org.spongepowered.asm.launch.MixinTweaker",
                "MixinConfigs"               : mixinConfigJson,
                "FMLCorePluginContainsFMLMod": true,
                "ForceLoadAsMod"             : true
        ])
    }
}


reobf {
    addExtraSrgFile mixinSrg
}

kapt {
    correctErrorTypes = true
    javacOptions {
        option("-AreobfSrgFile=${tasks.reobf.srg}")
        option("-AoutSrgFile=${mixinSrg}")
        option("-AoutRefMapFile=${refMap}")
    }
}

afterEvaluate {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}

sourceSets {
    main {
        output.resourcesDir = output.getClassesDirs().getFiles().stream().findAny().get()
        ext.refMap = mixingConfigRefMap
    }
}

runClient {
    args "--tweakClass", "org.spongepowered.asm.launch.MixinTweaker", "--mixin", "mixins.thaumcraftresearchtweaks.json"
}
